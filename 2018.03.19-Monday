每天进步一点点，未来前进一大步：
-------------------------------------
生活的中心，其实一直都是围绕着自己旋转的，
你在自己的世界中找到属于自己的哪一个方向，
才不会在纷繁复杂的社会中迷失自己。
不要忘记自己曾经有过的梦想，那些都是自己
在生命中至关重要的东西，没有什么比自己更
珍贵的了。
加油。
-------------------------------------
微信小游戏学习，继续上周


curl_init()函数，引出的一系列函数解释：
使用PHP的cURL库，可以简单的，有效的去抓取网页；
你只需要运行一个脚本，然后分析一下你所抓取的网页，
就可以依程序的方式得到你想要的数据了。

--无论是你想从一个链接上获取部分数据，
或者是获取一个XML文件并把其导入数据库，那些就是简单的获取网页内容了，
cURL是一个功能强大的PHP库。


PHP中CURL函数库（Client URL Library Function）:
curl_close():关闭一个curl会话
curl_copy_handle:拷贝一个curl连接资源的所有内容和参数
curl_errno:返回一个包含当前会话错误的信息和数字编号
curl_error:返回一个包含当前会话错误信息的字符串
curl_exec:执行一个curl会话
curl_getInfo:获取一个curl链接资源的句柄信息
curl_init:初始化一个curl会话
curl_multi_add_handle:向curl批处理会话中添加单独的curl句柄资源
curl_multi_close:关闭一个批处理句柄资源
curl_multi_exec:解析一个curl批处理句柄
curl_multi_getcontent:返回获取的输出的文本流
curl_multi_info_read:获取当前解析的curl的相关传输信息
curl_multi_init:初始化一个curl批处理句柄资源
curl_multi_remove_handle:移除curl批处理句柄资源中的某个句柄资源
curl_multi_select:get all the sockets associated with the curl exension,which can then be "selected"
curl_setopt_array:以数组的形式，为一个curl设置会话参数
curl_setopt：为一个curl设置会话参数
curl_version:获取curl相关的版本信息

curl_init()函数的作用：初始化一个curl会话，curl_init()函数唯一的一个参数是可选的：表示一个curl地址
curl_exec()函数的作用：执行一个curl会话，唯一的参数是curl_init()函数返回的句柄
curl_close()函数的作用：关闭一个curl会话，唯一的参数是curl_init()函数返回的句柄

----------------------------------------------------------------------
curl_setopt()函数中的定义：https://www.cnblogs.com/uxuew/p/7159865.html
----------------------------------------------------------------------
CURL学习之curl_setopt参数设置大总结：
使用方法：
curl_setopt(int ch,string option,mixed value):这个函数将为一个CURL会话设置选项。
option参数是你想要的设置，value是这个选项给定的值。

---
下列选项的值将作为长整形使用（在option参数中指定）：
CURLOPT_INFILESIZE:当你上传一个文件到远程站点，这个选项告诉PHP上传文件的大小
CURLOPT_VERBOSE:如果你想CURL报告每一件意外的事情，设置这个选项为一个非零值；
CURLOPT_HEADER:如果你想把一个头包含在输出中，设置这个选项为一个非零值；
CURLOPT_NOPROGRESS:如果你不会PHP为CURL传输显示一个进程条，设置这个选项为一个非零值；
注意：PHP自动设置这个选项为非零值，你应该仅仅为了调试的目的来改变这个选项。
CURLOPT_NOBODY:如果你不想在输出中包含body部分，设置这个选项为一个非零值；
CURLOPT_FAILONERROR:如果你想让PHP在发生错误（HTTP代码返回大于等于300）时，不显示，设置这个选项为一人非零值。
默认行为是返回一个正常页，忽略代码。
CURLOPT_UPLOAD:如果你想让PHP为上传做准备，设置这个选项为一个非零值；
CURLOPT_POST:如果你想让PHP去做一个正规的HTTP POST，设置这个选项为一个非零值。
这个POST是普通的application/x-www-from-urlencoded类型，多数被HTML表单使用
CURLOPT_FTPLISTONLY:设置这个选项为非零值，PHP将列出FTP的目录名列表；
CURLOPT_FTPAPPEND:设置这个选项为一个非零值，PHP将应用远程文件代替覆盖它。
CURLOPT_NETRC:设置这个选项为一个非零值，PHP将在你的~./netrc文件中，查找你要建立连接的远程站点的用户名及密码。
CURLOPT_FOLLOWLOCATION:设置脏个选项为一个非零值（像'Location:'）的头，服务器会把它当做HTTP头的一部分发送（注意这是递归的，PHP将发送形如'Location:'的头）
CURLOPT_PUT:设置这个选项为一个非零值取用HTTP上传一个文件
要上传的这个文件必须设置CURLOPT_INTFILE和CURLOPT_INFILESIZE选项；




--------------------------------------------------------------------------------------------------------------
继续干：

微信运动：
wx.getWeRunData(Object object):获取用户过去三十天的微信运动步数。
                                需要调用wx.login接口，需要用户授权scope.werun.
                参数Object object
                success/fail/complete

                success回调函数：
                参数Object res
                encryptedData:string包括敏感数据在内的完整用户信息的加密数据，详见加密数据揭秘数据算法。
                iv:string加密算法的初始向量，详见加密数据解密算法。

开放数据：
wx.getFriendCloudStorage(Object object):拉取当前用户所有同玩好友的托管数据。
                                        该接口只可在开放数据下使用。
                         参数：Object object
                         keyList:Array.<string>要拉取的key列表
                         success/fail/complete
                         success回调函数：参数Object res
                         data:Array.<UserGameData>同城好友的托管数据

-------
-------
-------
-------
removeUserStorage:小游戏可以通过本接口删除已经上报到微信的key-value数据
请求地址：POST https://api.weixin.qq.com/wxa/remove_user_storage?access_token=ACCESS_TOKEN&signature=SIGNATURE&openid=OPENID&sig_method=SIG_METHOD

access_token:接口调用凭证
openid:用户唯一标识符
appid:小程序appId
signature:用户登录态签名，签名算法：参考用户登录态签名算法
sig_method:用户登录态签名的哈希方法，如hmac_sha256等，请参考用户登录态签名算法
key:要删除的数据key列表

返回值：
errcode:错误码             errcode的合法值：0（请求成功）
errmsg:错误信息                            -1（系统繁忙，此时请开发者稍后再试）

示例代码：
curl -d '{"key":["gold","score"]}'\'https://api.weixin.qq.com/wxa/remove_user_storage?access_token=ACCESS_TOKEN&signature=SIGNATURE&openid=OPENID&sig_method=SIG_METHOD'


setUserStorage:上报用户数据后台接口。
小游戏可以通过本接口上报key-value数据到用户的CloudStorage.
注意：用户的存储数量不超过1M，单个key-value对数据不能超过1k.

参数：access_token/openid/appid/signature/sig_method
kv_list:(Object)要上报的数据

返回值：errcode:错误码
       errmsg:错误信息

errcode的合法值：
0——请求成功
-1——系统繁忙，此时请开发者稍后再试
87016:：由于单个key-value数据超过限制而写入失败
87017：由于用户存储的数量超过限制而写入失败。


开放数据域：
OpenDataContext

wx.getOpenDataContext():获取开放数据域    
                        返回值：OpenDataContext:开放数据域对象
                                属性：Canvas开放数据域和主域共享的sharedCanvas
                                方法：OpenDataContext.postMessage(Object message) 向开放数据域发送消息

wx.onMessage(function callback):监听主域发送的消息
                参数：function callback
                callback回调函数：
                参数Object data:主域发送的消息

OpenDataContext.postMessage(Object message):向开放数据域发送消息
                            参数:Object message
                            要发送的消息，message 中及嵌套对象中 key 的 value 只能是 primitive value。即 number、string、boolean、null、undefined。

access token:
getAccessToken:获取小程序的access_token.
            参数：grant_type:填写client_credential
                  appid:小程序appId
                  secret:小程序appSecret
            返回值：access_token:获取到的凭证
            errcode:错误码
            errMsg:错误信息

转发:
wx.getShareInfo(Object object):获取转发的详细信息
                参数Object object
                shareTicket:shareTicket
                success/fail/complete
                
                success回调函数：
                errMsg:错误信息
                encryptedData	string	包括敏感数据在内的完整转发信息的加密数据，详细见加密数据解密算法	
                iv	string	加密算法的初始向量，详细见加密数据解密算法
























