"每天进步一点点，未来前进一大步"——技术在于积累 
1、淄博麻将玩法收集中
2、枣庄麻将测试还没进行

从头开始：login
登陆的时候：缓存发送者信息以及角色信息，麻将游戏，发送麻将手牌，游戏中缓存的操作列表，
是否需要展示操作：默认是不要展示，
如果游戏当前操作者，记录出过牌，并且发送者玩家不是出牌状态，而且发送者玩家没有缓存操作，
那么展示操作；
新牌是-1；如果当前操作者是发送者，是出牌状态，那么新派：就是游戏中的新麻将；
发送的游戏数据：获取游戏发送到客户端的数据
getGameSendMsg：克隆游戏，删除mjList,删除新牌newMj,return游戏game
向玩家推送消息sendMessage:
  经过cmd:gameMessage  
  最后  
  经过转发消息forwardData:找到目标服务器， 
  经过转发连接池：forwardData:找到目标服务器主机 端口，转发数据， 
  在转发连接池中，自调转发消息forwardData: 使用forwardClient中的信息 
  转发数据中判断：消息转发客户端是否存在，是否关闭过；如果是的话，new forwardClient,放进转发连接池数组中，
  这时候，有了可以转发消息的客户端：调用转发客户端的发送数据 forwardClient->send($dataStr,$pack);
  发送数据：还要判断 swoole客户端 连接是否成功，连接状态，发送this->send; 没有swoole客户端，不是连接状态，发送数据缓存队列，判断没有连接，就去链接$this->connect();
    ---------------------------------------------------------
    |转发客户端中的connnect($packLen): new swoole_client(1,1) |
    |连接成功，发送缓存队列消息，接收消息，出错，关闭           |
    --------------------------------------------------------- ???????  
    swoole_Client:转发数据，连接 发送，接收，出错，关闭 ----重点！！！！！！
    
    
    createRoom:创建房间
      发送数据信息缓存，请求中纯正建房间信息，创建局数，包冲类型，能吃初始化，
      创建游戏数据 MjGameConstant::createGame($room,$jushu);
         ----------------------------
         |createGame($room,$jushu):|
         ---------------------------
                  金花牌局数据，基础数据，作为游戏数据；
                  游戏号等于房间号，
                  当前操作者等于第一个玩家player，庄家等于第一个玩家player,
                  当前局数等于第一局，最大局数等于发送的参数$jushu，
                  这一局的麻将等于洗牌麻将：
                              -----------------------------------
                              MaJiangConstant::refreshMajiang() |
                              ----------------------------------
                                        洗牌：
                                        将1-34个数循环4遍，放进麻将数组,
                                        将35-42循环1遍，放进数组；
                                        打乱数组shuffle($arr),return
                  麻将总数等于这一局麻将的count,
                  return $mjGame;
      游戏包冲，游戏能吃；
      缓存麻将游戏
      向发送者推送消息，
      向平台发送游戏创建成功消息：'c'=>'gameCreate'
      
      
