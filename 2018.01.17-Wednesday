每天进步一点点，未来前进一大步：
---------------------------------------------------------------
人生充满惊喜，挑战激发乐趣。在生命的道路上，不断的突破自己，勇往直前。
---------------------------------------------------------------
上午：fore medierm/morning
    开始：
    1、昨天阐述了，关于创建游戏房间时，游戏加入成员的类joinGamePanel，还有加入时的MainAssetNAme():这是在平台实现的；
        在创建房间的面板上，有关于ExtGameCreatePanel的继承类，createPanel中实现的类接口，
        都是平台上已经封装好的create()/dispose()/craeteData()返回添加在创建界面的数据；
    接下来，在游戏的中gamePanel是游戏的主面板控制类，它继承自BasePanel平台中的类；
    这个基础类中也有很多接口方式在gamepanel中被调用实现：
        Basepanel中一个重要的接口原型是：
          createLater(setCurrent,createLater):将创建房间之后的逻辑列下来：根据mainAssetName创建assetSwf找到要创建的spr_main;
                                              将主面板上的名称分别对应主类中定义的按钮，图形，文本等对象，InterfaceVariablesUtil(this,this.mainAsset);
                                              监听当前类的舞台（layout，监听调整舞台大小事件），监听清除来自舞台的调整大小;
                                              this.init():初始化这个文档类；
        mainAssetName():使用的是资源中的什么容器；
        assetSwf():返回的是新游戏使用的存储资源mj_main_swf；
        init():初始化时使用的一些变量图形相对应的按钮变量
        dispose():销毁这个面板，之前使用的所有方法类
    App:平台应用类 控制定义了平台中关于舞台，坐标，宽高，缩放，监听调整大小，定义库（布局形式(landscape景观)）
    2、来学习一下egret官网上结构，属性
        DisplayObject:所有现实对象的父类
        Bitmap:位图对象
        shape:绘图形对象
        DisplayObjectCoantainer:显示对象容器，每个类都可能使用的显示对象容器接口
        sprite:轻量级的显示容器
        Stage：舞台主容器
        TextField:文本对象
        TextInput:文本输入对象
    在轻量级sprite对象容器：
        alpha:透明度 width：宽height：高 rotation：旋转角度 scaleX:X缩放大小 scaleY:Y缩放大小 skewX:横向斜切 skewY:纵向斜切 
        visible：可视化 X:x坐标 Y：y坐标
    自定义现实对象类，需要继承DisplayObject的子类:例如：shape textField
        calss MyGrid extends egret.shape ....
    锚点：位于显示对象的左上角 ，可以通过改变图形坐标的方式，改变锚点的相对位置
        shape.graphics.drawRect(0,0,100,100);
        shape.x = 50;shape.y = 50;x,y坐标改变了锚点的位置
    碰撞检测：。。。。。。
    
下午：post medierm/afternoon
    1、操作方式一：改变位置（现实对象的x，y）
                从原点开始，x 轴的值向右为正，向左为负，而 y 轴的值向下为正，向上为负（与典型的图形系统相反）
       改变相对于舞台的位置： 
                x 和 y 属性始终是指显示对象相对于【其父显示对象坐标轴】的 0,0 坐标的位置，记住这一点很重要。！！！！！！----相对位置坐标；
                要确定对象相对于【全局舞台坐标】stage的位置，可以使用【任何显示对象的 globalToLocal()方法】，
                将坐标从全局（舞台）坐标转换为本地（显示对象容器）坐标；-------------------始终是相对于原来其父级对象容器的相对坐标；
       通过触摸移动显示对象：
                通过触摸移动对象，就是对监听对象，下一个坐标的标记，在偏移量的基础上，更能准确的显示，移动之后的下一次触发坐标在舞台的哪个位置；
                ！！！！！！！
    2、平移和滚动显示对象
                如果显示对象太大，不能在需要现实的区域全部显示出来，这个时候就需要使用scrollRect属性：定义对象所需要的显示区域；
                另外，还可以通过修改scrollRect属性，可以使内容左右平移或者上下移动；
       scrollRect属性是 Rectangle 类的实例，Rectangle 类包括将矩形区域定义为单个对象所需的有关值。
                使用显示对象的 scrollRect 属性时，最好使用 cacheAsBitmap 属性将显示对象的内容缓存为位图。
                这样，每次滚动显示对象时，就不必重绘显示对象的整个内容，而只需改用缓存的位图即可将所需部分直接呈示到屏幕上。
                有关详细信息，请参阅缓存显示对象；
    3、处理大小和缩放对象
                有两种方式可以测量和操作现实对象的大小------尺寸属性：width/height 缩放属性：scaleX/scaleY
       缩放是相对于现实对象的锚点来缩放的；         
    4、使用位图缓存
                如果egret中设计的尺寸较大的时候，考虑性能和优化
       
       
       
       
       
       
       
       
       
       
       
    
